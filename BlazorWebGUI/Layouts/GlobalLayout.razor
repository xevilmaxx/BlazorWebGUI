@using BlazorWebGUI.Dialogs

@*Other imports are already derived from root _Imports.razor*@
@inject IDialogService DialogService

@inherits LayoutComponentBase

<MudRTLProvider RightToLeft="@_rightToLeft">

	<MudThemeProvider Theme="@_currentTheme" />
	<MudDialogProvider FullWidth="true" MaxWidth="MaxWidth.Large" />
	<MudSnackbarProvider />


	<MudLayout>

		<!--Override padding becouse i don't care about top spacing-->
		<MudMainContent Style="padding: 0px; min-height: 100vh">

			@Body

			<!--https://mudblazor.com/features/flex#auto-margins-->
			<div Class="d-flex custom-footer">
				<!--Footer 1, like bootstrap all long-->
				<MudPaper Class="ml-3 mr-auto">
					<b>® EvilMax95</b>
				</MudPaper>

				
				<!--Footer 2, like bootstrap all long-->
				<MudPaper>

					<MudIconButton OnClick="OpenLanguageSelectorDialog" Icon="@Icons.Material.Filled.Translate" Color="Color.Inherit" Size="Size.Small" />

					<MudIconButton Icon="@Icons.Material.Filled.Brightness4" Size="Size.Small" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />

					<MudIconButton Icon="@Icons.Material.Filled.FormatTextdirectionRToL" Size="Size.Small" Color="Color.Inherit" OnClick="@((e) => RightToLeftToggle())" />

					@*<MudTooltip Text="Toggle light/dark theme">
	 	<MudIconButton Icon="@Icons.Material.Filled.Brightness4" Size="Size.Small" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
	 	</MudTooltip>
	 	<MudTooltip Text="Toggle right-to-left/left-to-right">
	 	<MudIconButton Icon="@Icons.Material.Filled.FormatTextdirectionRToL" Size="Size.Small" Color="Color.Inherit" OnClick="@((e) => RightToLeftToggle())" />
	 	</MudTooltip>*@

				</MudPaper>
			</div>

		</MudMainContent>

	</MudLayout>

</MudRTLProvider>

@code
{

	private void OpenLanguageSelectorDialog()
    {
        DialogService.Show<LanguageSelector>("Language Selection Dialog");
    }


	private bool _drawerOpen = false;
	private bool _rightToLeft = false;
	private string searchValue = string.Empty;

	private void DrawerToggle()
	{
		_drawerOpen = !_drawerOpen;
	}

	private void RightToLeftToggle()
	{
		_rightToLeft = !_rightToLeft;
	}

	protected override void OnInitialized()
	{
		_currentTheme = _defaultTheme;

	}

	#region Theme

	private void DarkMode()
	{
		if (_currentTheme == _defaultTheme)
		{
			_currentTheme = _darkTheme;
		}
		else
		{
			_currentTheme = _defaultTheme;
		}
	}

	private MudTheme _currentTheme = new MudTheme();
	private readonly MudTheme _defaultTheme =
		new MudTheme()
		{
			Palette = new Palette()
			{
				Black = "#272c34"
			}
		};
	private readonly MudTheme _darkTheme =
		new MudTheme()
		{
			Palette = new Palette()
			{
				Black = "#27272f",
				Background = "#32333d",
				BackgroundGrey = "#27272f",
				Surface = "#373740",
				DrawerBackground = "#27272f",
				DrawerText = "rgba(255,255,255, 0.50)",
				DrawerIcon = "rgba(255,255,255, 0.50)",
				AppbarBackground = "#27272f",
				AppbarText = "rgba(255,255,255, 0.70)",
				TextPrimary = "rgba(255,255,255, 0.70)",
				TextSecondary = "rgba(255,255,255, 0.50)",
				ActionDefault = "#adadb1",
				ActionDisabled = "rgba(255,255,255, 0.26)",
				ActionDisabledBackground = "rgba(255,255,255, 0.12)",
				Divider = "rgba(255,255,255, 0.12)",
				DividerLight = "rgba(255,255,255, 0.06)",
				TableLines = "rgba(255,255,255, 0.12)",
				LinesDefault = "rgba(255,255,255, 0.12)",
				LinesInputs = "rgba(255,255,255, 0.3)",
				TextDisabled = "rgba(255,255,255, 0.2)"
			}
		};

	#endregion

}